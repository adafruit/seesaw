/**
\page cpdsc_pg Project Description (*.cpdsc) Format

The CPDSC format provides the XML elements for defining CMSIS software projects. 
The CPDSC file content is considered static, so you do not have to keep the projects synchronized.

The scope of the description includes:
- CMSIS Run-Time Environment configuration (RTE)
- Project build, including linker script generation
- Flash programming
- Basic configuration of debug probs

The project format creates a basic project configuration and does not reflect tool-specific features or configurations. 
The import and conversion from the CPDSC format into a toolchain-specific format is the responsibility of the tool vendor.

\section cpdsc_definition Definition of CMSIS project
A CMSIS software project is a collection of files in a directory structure.
The CPDSC file is located in the base folder of the directory structure. Only one CPDSC file 
is allowed. A CPDSC file can describe one or more projects.

\b Example CMSIS Project Description File (*.cpdsc):
\code
<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd">
  <vendor>Keil</vendor>
  <name>STM32F407_Flash</name>
  <description>CMSIS RTOS Blinky for STM32F407 microcontroller using Keil 'MCBSTM32F400 Evaluation Board.</description>
  <url>www.keil.com/pack/Keil.STM32F4xx_DFP.pdsc</url>

  <releases>
    <release version="5.25.1">Generated 2018-02-20T09:10:26</release>
  </releases>

  <requirements>
    <packages>
      <package name="CMSIS" vendor="ARM"/>
      <package name="MDK-Middleware" vendor="Keil"/> 
      <package name="STM32F4xx_DFP" vendor="Keil"/>
    </packages>
  </requirements>

  <create>
    <project>
      <target Ddsp="NO_DSP" Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F407IGHx" Dtz="NO_TZ" Dvendor="STMicroelectronics:13">
        <output debug="1" name="Blinky" type="exe"/>
        <debugProbe coreClock="10000000" name="ULINK2" protocol="swd"/>
        <memory access="rx" default="1" name="IROM1" size="0x100000" start="0x8000000" startup="1"/>
        <memory access="rw" default="1" init="1" name="IRAM1" size="0x20000" start="0x20000000"/>
        <memory access="rw" default="0" init="1" name="IRAM2" size="0x10000" start="0x10000000"/>
      </target>
      <select>
        <component Cclass="CMSIS" Cgroup="CORE" Cvendor="ARM"/>
        <component Cclass="CMSIS" Cgroup="RTOS" Csub="Keil RTX" Cvendor="ARM">
          <file attr="config" category="source" name="CMSIS/RTOS/RTX/Templates/RTX_Conf_CM.c" version="4.70.1"/>
        </component>
        <component Cbundle="MCBSTM32F400" Cclass="Board Support" Cgroup="A/D Converter" Cvendor="Keil"/>
        <component Cbundle="MCBSTM32F400" Cclass="Board Support" Cgroup="Buttons" Cvendor="Keil"/>
        <component Cbundle="MCBSTM32F400" Cclass="Board Support" Cgroup="LED" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.4.4"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.6.0"/>
        </component>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="ADC" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="DMA" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC" Cvendor="Keil"/>
        <component Cclass="Device" Cgroup="Startup" Cvendor="Keil">
          <file attr="config" category="source" condition="STM32F407xx_ARMCC" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/arm/startup_stm32f407xx.s" version="2.6.0"/>
          <file attr="config" category="source" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/system_stm32f4xx.c" version="2.6.0"/>
        </component>
      </select>
      <files>
        <group name="Source Files">
          <file category="sourceC" name="./Blinky.c"/>
          <file category="sourceC" name="./Thread_LED.c"/>
          <file category="sourceC" name="./Thread_ADC.c"/>
        </group>
        <group name="Documentation">
          <file category="doc" name="./Abstract.txt"/>
        </group>
      </files>
    </project>
  </create>
</package>
\endcode


\section cpdsc_structure CPDSC top level structure
The CPDSC file format shares the schema file (PACK.xsd) with the PDSC and GPDSC format. 
However, a CPDSC file can only contain the top level elements listed in this table.

\section element_package_cpdsc /package (for CPDSC)
<table class="cmtable" summary="Element: CPDSC package">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>root</td>
    <td colspan="3">description root point for CPDSC</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>schemaVersion</td>
    <td>Version of PACK.xsd the description is compatible with</td>
    <td>VersionType</td>
    <td>required</td>  
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>name</td>
    <td>Name of the CPDSC \ref cp_SWComponents "Software Pack" file. Could be displayed by an installer.</td>
    <td>RestrictedString</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>vendor</td>
    <td>Creator or owner of the CPDSC file.</td>
    <td>RestrictedString</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>description</td>
    <td>High level description of the projects.</td>
    <td>xs:string</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>url</td>
    <td>File location if generated, link to the Pack this file belongs to. 
        If left empty, the Pack cannot be updated automatically from a server location.</td>
    <td>xs:anyURI</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>supportContact</td>
    <td>Email or web page for reporting errors or problems related to this project.</td>
    <td>xs:string</td>
    <td>0..1</td>
  </tr>
  <tr>
    <td>license</td>
    <td>Reference to a license file relative to this CPDSC.</td>
    <td>xs:string</td>
    <td>0..1</td>
  </tr>
  <tr>
    <td>\ref element_requirements "requirements"</td>
    <td>Specify required packs, compiler, and programming languages for the project.</td>
    <td>RequirementsType</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>\subpage cpdsc_create_pg "create"</td>
    <td>Section capturing the project configuration.</td>
    <td>CreateType</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>\ref element_releases "releases"</td>
    <td>Release history and release notes for tracking changes to this project. The attributes \elem{deprecated} and \elem{replacement} 
        are not supported in the context of CPDSC files.</td>
    <td>ReleasesType</td>
    <td>1..1</td>
  </tr>
</table>

You can refer to \ref element_package for more details.

\delim 

\section cpdsc_create_pg /package/create

This element groups one or more projects, which should be related. For example, the Secure and Non-secure part of an application, 
or a set of library projects and the final application project. We recommend to use different CPDSC files for each individual project.

<table class="cmtable" summary="Element: create">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_package_cpdsc "package"</td>
    <td colspan="3">\ref element_package_cpdsc "/package"</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\refelem{project}</td>
    <td>Grouping element to add project descriptions</td>
    <td>ProjectType</td>
    <td>1..*</td>  
  </tr>
</table>

\delim

\section element_project /package/create/project

This element bundles one project.

\b Example <em>project</em> section:
\code
<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd">
  ...
  <create>
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        ...
      </target>
      <select>
        ...
      </select>
      <files>
        ...
      </files>
    </project>
  </create>
</package>
\endcode
\n
<table class="cmtable" summary="Element: project">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_create_pg "create"</td>
    <td colspan="3">\ref cpdsc_create_pg</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>Name of the project. Will be used as file name as well. If not specified, then the name on the 
    package level is used.</td>
    <td>RestrictedString</td>
    <td>optional</td>  
  </tr>
  <tr>
    <td>documentation</td>
    <td>Path and file name of a document relative to the CPDSC file, or an url providing detailed information
    about the software project.</td>
    <td>xs:string</td>
    <td>optional</td>  
  </tr>
  <tr>
    <td>public</td>
    <td>Set publishing permissions for the documentation. If \tagem{public} is \token{true}, then the vendor gives permission 
        to extract the documentation from the pack and publish it on a web-page. Links to web pages are assumed to be public.
        The default value is \token{false}.</td>
    <td>xs:boolean</td>
    <td>optional</td>  
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref cpdsc_target_pg "target"</td>
    <td>Section containing details, for example about the board, device, memory, debug, or algorithms.</td>
    <td>TargetType</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>\ref cpdsc_select_pg "select"</td>
    <td>Specify the software components selected in the Run-Time Environment (RTE).</td>
    <td>SelectType</td>
    <td>0..1</td>
  </tr>
  <tr>
    <td>\ref cpdsc_files_pg "files"</td>
    <td>List all files used for the project build, which are not configured using components.</td>
    <td>ProjectFilesType</td>
    <td>0..1</td>
  </tr>
</table>

\delim

\section cpdsc_target_pg /package/create/project/target

This element describes the hardware target, including memory layout, debug probes, or flash programming algorithms.

\b Example <em>target</em> section:

\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      ...
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        <output debug="1" name="Blinky" type="exe"/>
        <debugProbe coreClock="10000000" name="ST-Link" protocol="swd"/>
        <memory access="rx" default="1" name="IROM1" size="0x200000" start="0x8000000" startup="1"/>
        <memory access="rw" default="1" init="1" name="IRAM1" size="0x30000" start="0x20000000"/>
        <memory access="rw" default="0" init="1" name="IRAM2" size="0x10000" start="0x10000000"/>
      </target>
      ...
    </project>
  </create>
</package>
\endcode
\n
<table class="cmtable" summary="Element: target">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_project "project"</td>
    <td colspan="3">\ref element_project</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>Bvendor</td>
    <td>Board vendor name. Either a board vendor and board name with optional board revision, or a device vendor and a device name.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Bname</td>
    <td>SPecify the board name.  Either a board vendor and board name with optional board revision, or a device vendor and a device name.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
    <tr>
    <td>Bversion</td>
    <td>Board version.  Either a board vendor and board name with optional board revision, or a device vendor and a device name.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dvendor</td>
    <td>Device vendor name.  Either a board vendor and board name with optional board revision, or a device vendor and a device name.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dname</td>
    <td>Device name.  Either a board vendor and board name with optional board revision, or a device vendor and a device name.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Pname</td>
    <td>Processor instance name. In case of multi-processor devices, this processor ID is required.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dfpu</td>
    <td>Selects the floating point unit option that is active for the project. \b Note, even if the
        device implements an FPU, setting \token{Dfpu=0} here, will disable FPU code generation. 
        Use predefined values from the table \ref DfpuEnum "Device FPU".</td>
    <td>DfpuEnum</td>
    <td>optional</td>
  </tr>  
  <tr>
    <td>Dendian</td>

    <td>Selects the endianness to be used for the project. Note that selecting an endianness that is
    not supported by the device, will result in a build that will not run on the device.
    Use predefined values from the table \ref DendianEnum "DendianEnum".</td>
    <td>DendianEnum</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Dmpu</td>
    <td>Selects the memory protection unit to be enabled or disabled for the project.
        Use predefined values from the table \ref DmpuEnum "Device MPU".</td>
    <td>DmpuEnum</td>
    <td>optional</td>
  </tr>  
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_output "output"</td>
    <td>Configure the build output name and type, and specify whether to include debug information.</td>
    <td>OutputType</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>\ref element_target_memory "memory"</td>
    <td>Specify the memory configuration for this application. Based on the memory layout, the
        linker script will be generated by the toolchain.</td>
    <td>TargetMemoryType</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>stack</td>
    <td>Specify the stack size in bytes allocated by the linker to the application. This element consists of one attribute named \tagem{size}.
        Set the value for this attribute. Only positive numbers are allowed.
    </td>
    <td>StackType</td>
    <td>1..1</td>
  </tr>
  <tr>
    <td>heap</td>
    <td>Specify the heap size in bytes allocated by the linker to the application. This element consists of one attribute named \tagem{size}.
        Set the value for this attribute. Only positive numbers are allowed.</td>
    <td>HeapType</td>
    <td>1</td>
  </tr>
  <tr>
    <td>\ref element_target_algorithm "algorithm"</td>
    <td>Selects from the list of available flash programming algorithms specified for this device
    in the corresponding Device Family Pack. Target and RAM memory ranges can be reconfigured from
    the defaults specified in the device description. </td>
    <td>TargetAlgorithmType</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>\ref element_debugProbe "debugProbe"</td>
    <td>Selects and configures the debug probe to be used for this project.</td>
    <td>DebugProbeType</td>
    <td>0..*</td>
  </tr>
</table>

\delim

\section element_target_algorithm /package/create/project/target/algorithm

\b Example <em>algorithm</em> element
\code
  ...
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
      ...
      <algorithm  name="CMSIS/Flash/STM32F4xx_1024.FLM" start="0x08000000"  size="0x100000" RAMstart=0x20000000 RAMsize=0x1000/>
      ...
      </target>
    </project>
  ...
\endcode
\n
<table class="cmtable" summary="Element: algorithm">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_target_pg "target"</td>
    <td colspan="3">\ref cpdsc_target_pg</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>Pname</td>
    <td>Processor name</td>
    <td>xs:string</td>
    <td>RestrictedString</td>
  </tr>
  <tr>
    <td>name</td>
    <td>References the name (without path) of the flash programming algorithm as defined by the DFP.</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>start</td>
    <td>Overrides the predefined programming start address of the flash programming algorithm as specified in the DFP.</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>size</td>
    <td>Overrides the predefined programming size of the flash programming algorithm as specified in the DFP.</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>RAMstart</td>
    <td>Overrides the predefined start address in RAM where the flash programming algorithm is loaded as specified in the DFP.</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>RAMsize</td>
    <td>Overrides the predefined RAM size in RAM where the flash programming algorithm is loaded as specified in the DFP.</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>default</td>
    <td>Sets this algorithm as the default algorithm for flash programming when the value is set to \token{1}. The defualt value is \token{0} - false.</td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>style</td>
    <td>Sets flash programming format. The default value is \token{Keil}. 
        Use the predefinde values as listed in the table \ref AlgorithmStyleEnum "Algorithm Styles".</td>
    <td>AlgorithmStyleType</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>parameter</td>
    <td>Parameter string passed when invoking the algorithm.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>endian</td>
    <td>Specify the endianness of the algorithm.  Default value is \token{Little-endian}. 
        Use the predefined values as listed in the table \ref DendianEnum "Endinaness".</td>
    <td>DendianEnum</td>
    <td>optional</td>
  </tr>
</table>

\delim

\section element_debugProbe /package/create/project/target/debugProbe

Specify the attributes of a debug probe.

\b Example <em>debugProbe</em> element
\code
  ...
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        ...
        <debugProbe coreClock="10000000" name="ST-Link" protocol="swd"/>
        ...
      </target>
    </project>
  ...
\endcode
\n
<table class="cmtable" summary="Element: debugProbe">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_target_pg "target"</td>
    <td colspan="3">\ref cpdsc_target_pg</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>Name of of the debug probe, for example \token{JLink}, \token{ULink2}, \token{ULinkPro}, \token{CMSIS-DAP}, or \token{ST-Link}.</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>protocol</td>
    <td>Select the debug protocol, for example, \token{swd}. Use the predefined values listed in the table \ref DebugProtocolEnum "Debug Protocol Type".</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>coreClock</td>
    <td>Clock frequency of the core once the system is initialized.</td>
    <td>NonNegativeInteger</td>
    <td>required</td>
  </tr>
  <tr>
    <td>tpiuClock</td>
    <td>Clock frequency of the TPIU block of the CoreSight debug logic. Only relevant for tracing.</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
</table>

\delim

\section element_target_memory /package/create/project/target/memory

Specify the memory layout. The linker script file will be genereted according to these settings.

\b Example <em>memory</em> element
\code
  ...
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
      ...
        <memory access="rx" default="1" name="IROM1" size="0x200000" start="0x8000000" startup="1"/>
        <memory access="rw" default="1" init="1" name="IRAM1" size="0x30000" start="0x20000000"/>
        <memory access="rw" default="0" init="1" name="IRAM2" size="0x10000" start="0x10000000"/>
       ...
      </target>
    </project>
  ...
\endcode

\n

<table class="cmtable" summary="Element: memory">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_target_pg "target"</td>
    <td colspan="3">\ref cpdsc_target_pg</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>Pname</td>
    <td>Identifies the processor.</td>
    <td>RestrictedString</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>id</td>
    <td>Eunmerated ID of memory. \token{Deprecated since version 1.4.4}</td>
    <td>MemoryIDTypeEnum</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>name</td>
    <td>Reference to the name of the memory as defined by the DFP.</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>start</td>
    <td>Overrides the predefined memory start address.</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>size</td>
    <td>Overrides the predefined memory size.</td>
    <td>NonNegativeInteger</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>access</td>
    <td>Overrides the predefined access permissions for the memory as specified in the DFP. The default value is \token{r}, for 'read' permission.
        Use the predefined values defined in the table \ref MemoryAccessTypeString "MemoryAccessTypeString".
    </td>
    <td>AccessType</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>alias</td>
    <td>Reference by 'name' to another memory to express that the same physical memory is mapped at another address.
    </td>
    <td>AccessType</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>init</td>
    <td>\token{Deprecated; do not use! Ignore!!!}.</td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>default</td>
    <td>Use to define the default memory for the linker. </td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>startup</td>
    <td>Specify whether the memory is used by the linker for the startup. The default value is \token{0} - false.</td>
    <td>xs:boolean</td>
    <td>optional</td>
  </tr>
</table>

\delim

\section element_output /package/create/project/target/output

Specify the characteristics for the build output file.

\b Example <em>output</em> element
\code
    <project name="STM32F429_Flash" documentation="./Abstract.txt">
      <target Dendian="Little-endian" Dfpu="SP_FPU" Dname="STM32F429ZITx" Dvendor="STMicroelectronics:13">
        <output debug="1" name="Blinky" type="exe"/>
        ...
      </target>
      ...
    </project>
\endcode

\n

<table class="cmtable" summary="Element: output">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_target_pg "target"</td>
    <td colspan="3">\ref cpdsc_target_pg</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>Name of the build output file.</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>type</td>
    <td>Select the build target to be \token{lib} - library or \token{exe} - executable. You can use the wildcard \token{*} for</td>
    <td>CompilerOutputType</td>
    <td>required</td>
  </tr>
  <tr>
    <td>debug</td>
    <td>Select whether the output will contain debug information. Use the values \token{1;0} for true and false.</td>
    <td>xs:boolean</td>
    <td>required</td>
  </tr>
</table>

\delim

\section cpdsc_select_pg /package/create/project/select

This element lists all software components that are selected within the Manage Run-Time Environment.

\b Example <em>select</em> section:
\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      ...
      <select>
        <component Cclass="CMSIS" Cgroup="Core" Cvendor="ARM" Cversion="4.1.0"/>
        <component Cclass="CMSIS" Cgroup="RTOS" Csub="Keil RTX" Cvendor="ARM" Cversion="4.78.0">
          <file attr="config" category="source" name="CMSIS/RTOS/RTX/Templates/RTX_Conf_CM.c" version="4.70.1"/>
        </component>
        <component Cbundle="STM32F429I-Discovery" Cclass="Board Support" Cgroup="Buttons" Cvendor="Keil" Cversion="1.0.0"/>
        <component Cbundle="STM32F429I-Discovery" Cclass="Board Support" Cgroup="LED" Cvendor="Keil" Cversion="1.0.0"/>
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil" Cversion="1.4.0">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.3.1"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.4.2"/>
        </component>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Common" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="Cortex" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="GPIO" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="PWR" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="STM32Cube HAL" Csub="RCC" Cvendor="Keil" Cversion="1.4.0"/>
        <component Cclass="Device" Cgroup="Startup" Cvendor="Keil" Cversion="2.4.0">
          <file attr="config" category="source" condition="STM32F429xx_ARMCC" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/arm/startup_stm32f429xx.s" version="2.4.2"/>
          <file attr="config" category="source" name="Drivers/CMSIS/Device/ST/STM32F4xx/Source/Templates/system_stm32f4xx.c" version="2.4.2"/>
        </component>
      </select>
      ...
    </project>
  </create>
</package>
\endcode
\n
<table class="cmtable" summary="Element: select">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_project "project"</td>
    <td colspan="3">\ref element_project</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_project_component "component"</td>
    <td>Group element for defining the selected software components.</td>
    <td>ComponentSelectType</td>
    <td>1..*</td>
  </tr>
</table>

\delim

\section element_project_component /package/create/project/select/component

Specify the software components.

\b Example <em>component</em> element
\code
...
      <select>
        <component Cclass="CMSIS" Cgroup="Core" Cvendor="ARM" Cversion="4.1.0"/>
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil" Cversion="1.4.0">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.3.1"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.4.2"/>
        </component>
      </select>
...
\endcode
\n
<table class="cmtable" summary="Element: component">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_select_pg "select"</td>
    <td colspan="3">\ref cpdsc_select_pg</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>Cvendor</td>
    <td>Vendor name of the component.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Cbundle</td>
    <td>Name of bundle to which the selected component belongs.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Cclass</td>
    <td>Component class name. Predefined values can be used as listed in the table \ref CclassType "Component Classes".</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Cgroup</td>
    <td>Component group name following the taxonomy. Predefined values can be used as listed in the table \ref CgroupType "Component Groups".</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>Csub</td>
    <td>Component sub group name following the taxonomy (string may be empty)</td>
    <td>CsubType</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Cvariant</td>
    <td>Name of the variant of the selected component.</td>
    <td>CvariantType</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Cversion</td>
    <td>Version of the selected component. Note, a higher version number can be entered in case 
        the matching version is not available.</td>
    <td>ComponentVersionType</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>Capiversion</td>
    <td>Implemented api version defined for the corresponding Cclass:Cgroup:Csub. Set the value only for 
        components that have an  associated \tagem{api}.</td>
    <td>ComponentVersionType</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>instances</td>
    <td>Number of instances created for the component. Set the value only for
        components that are multi-instance capable. Defaults to \token{1} if not set.</td>
    <td>InstancesType</td>
    <td>optional</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_component_file "file"</td>
    <td>Specify configuration files from the selected component.</td>
    <td>ComponentSelectType</td>
    <td>0..*</td>
  </tr>
</table>

\delim

\section element_component_file /package/create/project/select/component/file

Specify the configuration files for the selected component. These files must already exist
in the project folder structure and contain a configuration setup specifically for the project.

\b Example <em>file</em> element
\code
  ...
        <component Cclass="Device" Cgroup="STM32Cube Framework" Csub="Classic" Cvendor="Keil" Cversion="1.4.0">
          <file attr="config" category="header" name="CMSIS/Driver/Config/RTE_Device.h" version="2.3.1"/>
          <file attr="config" category="header" name="MDK/Templates/Inc/stm32f4xx_hal_conf.h" version="1.4.2"/>
        </component>
  ...
\endcode
\n
<table class="cmtable" summary="Element: file">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref  element_project_component "component"</td>
    <td colspan="3">\ref element_project_component</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>condition</td>
    <td>Condition id being used at the time of runtime configuration.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>category</td>
    <td>File type, for example \token{header}. Use predefined values from the table \ref FileCategoryEnum "File Category".</td>
    <td>FileCategoryType</td>
    <td>required</td>
  </tr>
  <tr>
    <td>attr</td>
    <td>File action attribute, for example \token{copy}. Use predefined values from the table \ref FileCategoryEnum "File Category".</td>
    <td>\ref FileAttributeEnum "FileAttributeType"</td>
    <td>optional</td>
  </tr>
  <tr>
    <td>name</td>
    <td>File path and name within pack it originates from.</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>version</td>
    <td>Version of the configuration file being used in the example.</td>
    <td>\ref VersionType "VersionType"</td>
    <td>required</td>
  </tr>
</table>

\delim

\section cpdsc_files_pg /package/create/project/files

The files section specifies files to be included into the project build that are not managed through
software components. Files can be sorted into named groups.

\b Example <em>files</em> section:
\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      <files>
        <group name="Source Files">
          <file category="sourceC" name="./Blinky.c"/>
          <file category="sourceC" name="./Thread_LED.c"/>
        </group>
        <group name="Documentation">
          <file category="doc" name="./Abstract.txt"/>
        </group>
      </files>
    </project>
  </create>
</package>
\endcode
\n
<table class="cmtable" summary="Element: files">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref element_project "project"</td>
    <td colspan="3">\ref element_project</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_project_file "file"</td>
    <td>Specify a file.</td>
    <td>ProjectFileType</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>\ref element_project_group "group"</td>
    <td>Specify a group of files.</td>
    <td>GroupType</td>
    <td>0..*</td>
  </tr>
</table>

\delim

\section element_project_file /package/project/create/files/.../file

Specify files that are not included through software components.

<table class="cmtable" summary="Element: file">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_files_pg "files"</td>
    <td colspan="3">\ref cpdsc_files_pg</td>
  </tr>
  <tr>
    <td>\ref element_project_group "group"</td>
    <td colspan="3">\ref element_project_group</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>Path and name of the file, relative to CPDSC location.</td>
    <td>xs:string</td>
    <td>required</td>
  </tr>
  <tr>
    <td>category</td>
    <td>Type of file, for example, whether the file is a C or assembler file. 
        Use the predefined values from the table \ref FileCategoryEnum "File Categories".</td>
    <td>FileCategoryType</td>
    <td>required</td>
  </tr>
  <tr>
    <td>src</td>
    <td>Folder specifying the source code location for a library.</td>
    <td>xs:string</td>
    <td>optional</td>
  </tr>
</table>

\delim

\section element_project_group /package/create/project/files/.../group

Nesting of groups is supported. It is tool dependent how grouping is represented in the
tool, because the grouping of files has no impact on the build by default.

\b Example <em>files</em> section:
\code
<package xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="PACK.xsd"/>
  ...
  <create>
    <project>
      <files>
        <group name="Source">
          <group name="C">
            <file category="sourceC" name="./Blinky.c"/>
            <file category="sourceC" name="./Thread_LED.c"/>
          </group>
          <group name="ASM">
            <file category="sourceAsm" name="./startup_add.s"/>
          </group>
        </group>
        <group name="Documentation">
          <file category="doc" name="./Abstract.txt"/>
        </group>
      </files>
    </project>
  </create>
</package>
\endcode
\n
<table class="cmtable" summary="Element: group">
  <tr>
    <th>Parents</th>
    <th colspan="3">Element Chain</th>
  </tr>
  <tr>
    <td>\ref cpdsc_files_pg "files"</td>
    <td colspan="3">\ref cpdsc_files_pg</td>
  </tr>
  <tr>
    <th>Attributes</th>
    <th>Description</th>
    <th>Type</th>
    <th>Use</th>
  </tr>
  <tr>
    <td>name</td>
    <td>name of the group of files</td>
    <td>RestrictedString</td>
    <td>required</td>
  </tr>
  <tr>
    <th>Child Elements</th>
    <th>Description</th>
    <th>Type</th>
    <th>Occurrence</th>
  </tr>
  <tr>
    <td>\ref element_project_file "file"</td>
    <td>Specify a file.</td>
    <td>ProjectFileType</td>
    <td>0..*</td>
  </tr>
  <tr>
    <td>\ref element_project_group "group"</td>
    <td>Specify a group (nesting).</td>
    <td>GroupType</td>
    <td>0..*</td>
  </tr>
</table>

\delim
*/
